# This file contains common pin mappings for the BIGTREETECH SKR V1.4
# board. To use this config, the firmware should be compiled for the
# LPC1768 or LPC1769(Turbo).

# See the example.cfg file for a description of available parameters.

[include custom_menu.cfg]


[stepper_x]
step_pin: P2.2
dir_pin: P2.6
enable_pin: !P2.1
step_distance: .005
endstop_pin: P1.29
position_endstop: 0
position_max: 200
homing_speed: 50

[stepper_y]
step_pin: P0.19
dir_pin: !P0.20
enable_pin: !P2.8
step_distance: .005
endstop_pin: P1.28
position_endstop: 0
position_max: 200
homing_speed: 50

[stepper_z]
step_pin: P0.22
dir_pin: P2.11
enable_pin: !P0.21
step_distance: .00125
endstop_pin: P1.27
position_endstop: 0.0
position_max: 155

[extruder]
step_pin: P2.13
dir_pin: !P0.11
enable_pin: !P2.12
step_distance: .010526
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: P2.7
sensor_type: NTC 100K beta 3950
sensor_pin: P0.24
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 250

[heater_fan hotend_fan]
pin: P2.4
heater: extruder
heater_temp: 50.0
fan_speed: 0.90

#[extruder1]
#step_pin: P1.15
#dir_pin: P1.14
#enable_pin: !P1.16
#heater_pin: P2.4
#sensor_pin: P0.23
#...

[heater_bed]
heater_pin: P2.5
sensor_type: NTC 100K beta 3950
sensor_pin: P0.25
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 110

[fan]
pin: P2.3

[mcu]
serial: /dev/serial/by-id/usb-Klipper_lpc1769_0690001247084AAF54DD6C5DC22000F5-if00

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 500
max_z_velocity: 10
max_z_accel: 100

[input_shaper]
shaper_freq_x: 45.7
shaper_freq_y: 49.2
shaper_type: mzv

[bed_screws]
screw1: 20,20
screw2: 180,20
screw3: 20,180
screw4: 180,180
screw5: 100,100

# This enables a 'force_move' command ignoring all homing, Z-stops etc. Useful in debugging.
[force_move]
enable_force_move: True

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro RESUME_MACRO]
gcode:
        M117
        RESUME

[gcode_macro M600]
default_parameter_X: 50
default_parameter_Y: 0
default_parameter_Z: 30
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    M117 UNLOAD AND LOAD
    RESTORE_GCODE_STATE NAME=M600_state



# Configure a TMC2209 stepper motor driver via single wire UART. To
# use this feature, define a config section with a "tmc2209" prefix
# followed by the name of the corresponding stepper config section
# (for example, "[tmc2209 stepper_x]").
#[tmc2209 stepper_x]
#uart_pin:
#tx_pin:
#select_pins:
#microsteps:
#interpolate: True
#run_current:
#hold_current:
#sense_resistor: 0.110
#stealthchop_threshold: 0
#   See the tmc2208 section above for the definition of these
#   parameters.
#uart_address:
#   The address of the TMC2209 chip for UART messages (an integer
#   between 0 and 3). This is typically used when multiple TMC2209
#   chips are connected to the same UART pin. The default is zero.
#driver_IHOLDDELAY: 8
#driver_TPOWERDOWN: 20
#driver_TBL: 2
#driver_TOFF: 3
#driver_HEND: 0
#driver_HSTRT: 5
#driver_PWM_AUTOGRAD: True
#driver_PWM_AUTOSCALE: True
#driver_PWM_LIM: 12
#driver_PWM_REG: 8
#driver_PWM_FREQ: 1
#driver_PWM_GRAD: 14
#driver_PWM_OFS: 36
#driver_SGTHRS: 0
#   Set the given register during the configuration of the TMC2209
#   chip. This may be used to set custom motor parameters. The
#   defaults for each parameter are next to the parameter name in the
#   above list.
#diag_pin:
#   The micro-controller pin attached to the DIAG line of the TMC2209
#   chip. Setting this creates a "tmc2209_stepper_x:virtual_endstop"
#   virtual pin which may be used as the stepper's endstop_pin. Doing
#   this enables "sensorless homing". (Be sure to also set
#   driver_SGTHRS to an appropriate sensitivity value.) The default is
#   to not enable sensorless homing.


########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: P1.10
microsteps: 32
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 250

[tmc2209 stepper_y]
uart_pin: P1.9
microsteps: 32
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 250

[tmc2209 stepper_z]
uart_pin: P1.8
microsteps: 32
run_current: 0.650
hold_current: 0.450
stealthchop_threshold: 30

[tmc2209 extruder]
uart_pin: P1.4
microsteps: 16
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 5
#
#[tmc2208 extruder1]
#uart_pin: P1.1
#microsteps: 16
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 5


# FROM:  https://github.com/KevinOConnor/klipper/issues/2087




######################################################################
# Fysetc Mini 12864Panel v2.1 (with neopixel backlight leds)
######################################################################

[display]
#    mini12864 LCD Display
lcd_type: uc1701
cs_pin: P1.18
a0_pin: P1.19
encoder_pins: ^P3.25,^P3.26
click_pin: ^!P0.28
contrast: 63

[neopixel my_neopixel]
#    To control Neopixel RGB in mini12864 display
pin: P1.21
chain_count: 3
initial_RED: 0.0
initial_GREEN: 0.07843
initial_BLUE: 1.0
color_order_GRB: False

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.256
#*# pid_ki = 0.957
#*# pid_kd = 117.969
